generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  username      String          @unique
  email         String          @unique
  password      String
  createadAt    DateTime
  UserExercises UserExercises[]
}

model UserExercises {
  id         Int      @id @default(autoincrement())
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  exerciseId Int
  userId     String
}

model Exercise {
  id                Int      @id @default(autoincrement())
  name              String
  description       String
  experienceLevelId Int
  equipamentId      Int
  gripId            Int?
  createdAt         DateTime @default(now())
  tutorialUrl       String?
  thumbnailUrl      String?
  riskLevel         String

  grip                Grip?                 @relation(fields: [gripId], references: [id])
  experienceLevel     ExperienceLevel       @relation(fields: [experienceLevelId], references: [id])
  equipament          Equipament            @relation(fields: [equipamentId], references: [id])
  usedMuscles         MusclesExercises[]
  ExerciseInstruction ExerciseInstruction[]
  ExerciseTips        ExerciseTips[]
  UserExercises       UserExercises[]
}

model ExerciseInstruction {
  exerciseId  Int
  step        Int
  description String
  imageUrl    String?
  exercise    Exercise @relation(fields: [exerciseId], references: [id])

  @@id([exerciseId, step])
}

model ExerciseTips {
  id          Int      @id @default(autoincrement())
  exerciseId  Int
  description String
  exercise    Exercise @relation(fields: [exerciseId], references: [id])
}

model Muscle {
  id          Int                @id @default(autoincrement())
  name        String             @unique
  description String?
  imageUrl    String?
  exercises   MusclesExercises[]
}

model ExperienceLevel {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Exercise Exercise[]
}

model Grip {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  Exercise Exercise[]
}

model Equipament {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  imageUrl    String?
  Exercise    Exercise[]
}

model MusclesExercises {
  id         Int     @id @default(autoincrement())
  muscleId   Int
  exerciseId Int
  isPrimary  Boolean @default(false)

  muscle   Muscle   @relation(fields: [muscleId], references: [id])
  exercise Exercise @relation(fields: [exerciseId], references: [id])
}
